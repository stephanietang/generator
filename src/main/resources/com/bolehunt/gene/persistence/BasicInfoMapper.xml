<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bolehunt.gene.persistence.BasicInfoMapper">
  <resultMap id="BaseResultMap" type="com.bolehunt.gene.domain.BasicInfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="country" jdbcType="INTEGER" property="country" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="tel_no" jdbcType="VARCHAR" property="telNo" />
    <result column="experience" jdbcType="INTEGER" property="experience" />
    <result column="degree" jdbcType="INTEGER" property="degree" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="born_year" jdbcType="INTEGER" property="bornYear" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, user_id, name, country, city, tel_no, experience, degree, sex, born_year
  </sql>
  <select id="selectByExample" parameterType="com.bolehunt.gene.domain.BasicInfoExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from basic_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from basic_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from basic_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.bolehunt.gene.domain.BasicInfoExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from basic_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bolehunt.gene.domain.BasicInfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into basic_info (user_id, name, country, 
      city, tel_no, experience, 
      degree, sex, born_year
      )
    values (#{userId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{country,jdbcType=INTEGER}, 
      #{city,jdbcType=VARCHAR}, #{telNo,jdbcType=VARCHAR}, #{experience,jdbcType=INTEGER}, 
      #{degree,jdbcType=INTEGER}, #{sex,jdbcType=INTEGER}, #{bornYear,jdbcType=INTEGER}
      )
    <selectKey keyProperty="id" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
  </insert>
  <insert id="insertSelective" parameterType="com.bolehunt.gene.domain.BasicInfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into basic_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="country != null">
        country,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="telNo != null">
        tel_no,
      </if>
      <if test="experience != null">
        experience,
      </if>
      <if test="degree != null">
        degree,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="bornYear != null">
        born_year,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="country != null">
        #{country,jdbcType=INTEGER},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="telNo != null">
        #{telNo,jdbcType=VARCHAR},
      </if>
      <if test="experience != null">
        #{experience,jdbcType=INTEGER},
      </if>
      <if test="degree != null">
        #{degree,jdbcType=INTEGER},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="bornYear != null">
        #{bornYear,jdbcType=INTEGER},
      </if>
    </trim>
    <selectKey keyProperty="id" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
  </insert>
  <select id="countByExample" parameterType="com.bolehunt.gene.domain.BasicInfoExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from basic_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update basic_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.country != null">
        country = #{record.country,jdbcType=INTEGER},
      </if>
      <if test="record.city != null">
        city = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.telNo != null">
        tel_no = #{record.telNo,jdbcType=VARCHAR},
      </if>
      <if test="record.experience != null">
        experience = #{record.experience,jdbcType=INTEGER},
      </if>
      <if test="record.degree != null">
        degree = #{record.degree,jdbcType=INTEGER},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=INTEGER},
      </if>
      <if test="record.bornYear != null">
        born_year = #{record.bornYear,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update basic_info
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      country = #{record.country,jdbcType=INTEGER},
      city = #{record.city,jdbcType=VARCHAR},
      tel_no = #{record.telNo,jdbcType=VARCHAR},
      experience = #{record.experience,jdbcType=INTEGER},
      degree = #{record.degree,jdbcType=INTEGER},
      sex = #{record.sex,jdbcType=INTEGER},
      born_year = #{record.bornYear,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bolehunt.gene.domain.BasicInfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update basic_info
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="country != null">
        country = #{country,jdbcType=INTEGER},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="telNo != null">
        tel_no = #{telNo,jdbcType=VARCHAR},
      </if>
      <if test="experience != null">
        experience = #{experience,jdbcType=INTEGER},
      </if>
      <if test="degree != null">
        degree = #{degree,jdbcType=INTEGER},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="bornYear != null">
        born_year = #{bornYear,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bolehunt.gene.domain.BasicInfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update basic_info
    set user_id = #{userId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      country = #{country,jdbcType=INTEGER},
      city = #{city,jdbcType=VARCHAR},
      tel_no = #{telNo,jdbcType=VARCHAR},
      experience = #{experience,jdbcType=INTEGER},
      degree = #{degree,jdbcType=INTEGER},
      sex = #{sex,jdbcType=INTEGER},
      born_year = #{bornYear,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>